{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230 huansir \u7684\u4e2a\u4eba\u7f51\u7ad9\u7f51\u7ad9\u5185\u5bb9","text":"Huansir \u6d59\u6c5f\u5927\u5b66\u5927\u4e00\u672c\u79d1\u751f ABOUT <p>\u7537\uff0cACMer\uff0c\u6d59\u6c5f\u5927\u5b66\u56fe\u7075\u73ed\u5728\u8bfb\u3002\u6b22\u8fce\u5404\u4f4d\u52a0qq\u4ea4\u6d41\uff1a2122133361                     </p> \u4e2a\u4eba\u7ecf\u5386 \u8fdb\u5165\u9547\u6d77\u4e2d\u5b66\u8fdb\u884c\u5b66\u4e60 \u586b\u6d77 \u8fdb\u5165\u6d59\u6c5f\u5927\u5b66\u8fdb\u884c\u5b66\u4e60\uff0c\u52a0\u5165\u6821ACM\u961f \u571f\u6728\uff01 \u8f6c\u5165\u56fe\u7075\u73ed \u571f\u6728\u7684\u5c3d\u5934 \u8054\u7cfb\u65b9\u5f0f qq:2122133361 wechat:huanyxsir                              2122133361@qq.com                          \u5173\u4e8e \u4e2a\u4eba\u7ecf\u5386 \u8054\u7cfb\u65b9\u5f0f \u8bfe\u7a0b\u7b14\u8bb0 \u67e5\u770b\u66f4\u591a \u7b97\u6cd5\u7ade\u8d5b \u67e5\u770b\u66f4\u591a \u535a\u5ba2 \u67e5\u770b\u66f4\u591a"},{"location":"algorithm-competition/","title":"\u7b97\u6cd5\u7ade\u8d5b","text":"<p>\u8be5\u5206\u7c7b\u4e0b\u4e3b\u8981\u4ecb\u7ecd\u4e86\u90e8\u5206\u535a\u4e3b\u7684\u8bad\u7ec3\u4ee5\u53ca\u6bd4\u8d5b\u8bb0\u5f55</p>"},{"location":"algorithm-competition/#vp","title":"vp \u8bb0\u5f55","text":"<ul> <li>2022-2023 ICPC North America Championship</li> </ul>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/","title":"2022-2023 ICPC North America Championship","text":"<ul> <li>\u94fe\u63a5 \uff1ahttps://qoj.ac/contest/1248</li> </ul>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#a","title":"A","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#b","title":"B","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#c","title":"C","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#d","title":"D","text":"<p>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6839\u68ee\u6797\uff0c\u6bcf\u4e2a\u70b9\u6709 \\(p_i,c_i\\) \u4e24\u4e2a\u70b9\u6743\uff0c\u901a\u8fc7\u4e0d\u65ad\u5220\u9664\u4efb\u610f\u6839\u8282\u70b9\u53ef\u5f97\u5230\u4e00\u4e2a\u5e8f\u5217\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u5e8f\u5217\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\u8d21\u732e\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6709 \\(p_i\\) \u7684\u6982\u7387\u505c\u6b62\u8ba1\u7b97\u8d21\u732e\uff0c\\(1-p_i\\) \u7684\u6982\u7387\u4f7f\u8d21\u732e\u52a0 \\(c_i\\) \u5e76\u5f80\u4e0b\u4e00\u4e2a\u8ba1\u7b97\u8d21\u732e\u3002\u95ee\u671f\u671b\u6700\u5927\u8d21\u732e \\(n \\leq 10^5\\)</p> <p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#e","title":"E","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#f","title":"F","text":"<p>\u7ed9\u5b9a 4 \u4e2a\u77e9\u5f62\uff0c\u95ee\u80fd\u5426\u62fc\u6210\u957f\u65b9\u5f62\u3002</p> <p></p> <p>\u5206\u4e94\u79cd\u60c5\u51b5\u8ba8\u8bba\u5373\u53ef</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#g","title":"G","text":"<p>\u7ed9\u5b9a \\(n\\) \u5929\u6bcf\u5929\u7684\u822a\u73ed\u6570\u91cf\uff0c\u4f60\u8981\u9009\u62e9\u6700\u5c11\u7684\u822a\u73ed\u603b\u6570\uff0c\u4f7f\u5f97\u6240\u6709\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(m\\) \u7684\u8fde\u7eed\u5929\u6570\u5176\u9884\u5b9a\u7684\u822a\u73ed\u6570 \\(\\geq k\\)</p> <p>\u4ece\u5de6\u5f80\u53f3\u79fb\u52a8\u957f\u5ea6\u4e3a \\(m\\) \u7684\u533a\u95f4\uff0c\u6bcf\u6b21\u4e00\u5b9a\u662f\u9009\u62e9\u4ece\u5929\u6570\u665a\u7684\u5f00\u59cb\u9009\u62e9\uff08\u5bf9\u540e\u7eed\u5f71\u54cd\u6700\u4f18\uff09\uff0c<code>deque</code> \u6a21\u62df\u5373\u53ef\u3002</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#h","title":"H","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#i","title":"I","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#j","title":"J","text":"<p>\\(O(n^3)\\) \u600e\u4e48\u80fd\u8fc7\u3002</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#k","title":"K","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#l","title":"L","text":"<p>Alice \u548c Bob \u73a9\u6e38\u620f\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4ece \\(n\\) \u5806\u77f3\u5b50\u4e2d\u6311\u4e0d\u8d85\u8fc7\u603b\u6570\u4e00\u534a\u7684\u77f3\u5b50\u5806\u5220\u6389\uff0c\u8bb0\u4e3a \\(x\\)\u3002\u7136\u540e\u518d\u4ece\u5269\u4e0b\u672a\u88ab\u5220\u6389\u7684\u77f3\u5b50\u91cc\u9009\u62e9 \\(x\\) \u5806\u77f3\u5b50\u5206\u6210\u4e24\u5806\u975e\u7a7a\u77f3\u5b50\u5806\uff0c\u65e0\u6cd5\u64cd\u4f5c\u8005\u8f93\u3002\u95ee\u5148\u624b\u662f\u5426\u5fc5\u80dc\u3002</p> <p>\u5bb9\u6613\u53d1\u73b0\u5168 <code>1</code> \u7684\u65f6\u5019\u624d\u4f1a\u65e0\u6cd5\u64cd\u4f5c\u3002\u540c\u65f6\u82e5\u6240\u6709\u77f3\u5b50\u5806\u4e2a\u6570\u90fd\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5148\u624b\u80af\u5b9a\u4f1a\u5c06\u5c40\u9762\u53d8\u6210 \\(n-x\\) \u5806\u5947\u6570\u4e0e \\(x\\) \u5806\u5076\u6570\uff0c\u90a3\u4e48\u540e\u624b\u53ef\u4ee5\u5c06\u5148\u624b\u65b0\u5206\u51fa\u7684\u6240\u6709\u77f3\u5b50\u7684\u5947\u6570\u5806\u53bb\u6389\uff0c\u5c06\u6240\u6709\u5076\u6570\u5806\u5206\u6210\u4e24\u4e2a\u5947\u6570\u5806\u3002\u56e0\u6b64\uff0c\u5148\u624b\u51fa\u73b0\u7684\u5c40\u9762\u5fc5\u5168\u4e3a\u5947\u6570\uff0c\u540e\u624b\u5fc5\u4e0d\u5168\u4e3a\u5947\u6570\uff0c\u6545\u5148\u624b\u5fc5\u8d25\u3002</p> <p>\u82e5\u5f53\u524d\u5c40\u9762\u5b58\u5728\u5076\u6570\uff0c\u8bbe\u5176\u6709 \\(t\\) \u5806\uff0c\u6211\u4eec\u9009\u62e9 \\(\\lfloor{\\frac{t}{2}}\\rfloor\\) \u5806\u5076\u6570\u77f3\u5b50\u5220\u53bb\uff08\u4e0d\u8db3\u7528\u5947\u6570\u5806\u6765\u8865\uff09\uff0c\\(\\lceil{\\frac{t}{2}}\\rceil\\) \u5806\u5076\u6570\u77f3\u5934\u5206\u6210\u4e24\u4e2a\u5947\u6570\u5806\uff0c\u5373\u53ef\u8f6c\u5316\u6210\u5168\u5947\u5c40\u9762\uff0c\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u4f46\u82e5 \\(n\\) \u4e3a\u5947\u6570\u4e14\u77f3\u5b50\u5806\u5168\u662f\u5076\u6570\uff0c\u90a3\u4e48\u5148\u624b\u65e0\u6cd5\u4e00\u6b65\u5c06\u5176\u53d8\u6210\u5168\u4e3a\u5947\u6570\uff0c\u6b64\u65f6\u4ed6\u8981\u4fdd\u8bc1\u81ea\u5df1\u64cd\u4f5c\u540e\u4ecd\u5168\u4e3a\u5076\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u7ec8\u5230\u8fbe\u5168 <code>2</code> \u5c40\u9762\u65f6\uff0c\u6b64\u65f6\u7684\u5148\u624b\u5fc5\u5b9a\u4f1a\u4ea7\u751f\u5947\u6570\u3002\u5bb9\u6613\u53d1\u73b0\u5c06\u6240\u6709\u77f3\u5b50\u5806\u4e2a\u6570\u9664 2 \u540e\u5176\u5c31\u53d8\u6210\u4e86\u539f\u95ee\u9898\uff0c\u6545\u82e5 \\(n\\) \u4e3a\u5947\u6570\uff0c\u6211\u4eec\u9700\u8981\u540c\u65f6\u5bf9\u6240\u6709\u77f3\u5b50\u5806\u4e2a\u6570\u9664 2 \uff0c\u76f4\u5230\u51fa\u73b0\u5947\u6570\u3002</p>"},{"location":"algorithm-competition/vp/2022-2023-ICPC-North-America-Championship/#m","title":"M","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"blog/","title":"\u535a\u5ba2","text":""},{"location":"courses-notes/","title":"TODOLIST","text":""},{"location":"courses-notes/#_1","title":"\u901a\u8bc6\u8bfe\u7a0b","text":"<ul> <li> \u6570\u5b66\u5206\u6790\uff08\u7532\uff09II\uff08H\uff09 </li> <li> \u7ebf\u6027\u4ee3\u6570 II\uff08H\uff09 </li> <li> \u666e\u901a\u7269\u7406\u5b66 I\uff08H\uff09</li> <li> \u666e\u901a\u7269\u7406\u5b9e\u9a8c I</li> </ul>"},{"location":"courses-notes/#_2","title":"\u4e13\u4e1a\u57fa\u7840\u8bfe\u7a0b","text":"<ul> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840</li> <li> \u79bb\u6563\u6570\u5b66\u7406\u8bba\u57fa\u7840 </li> </ul>"},{"location":"courses-notes/#_3","title":"\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u7a0b","text":"<ul> <li> \u8ba1\u7b97\u673a\u7cfb\u7edfI </li> </ul>"},{"location":"courses-notes/#_4","title":"\u4e13\u4e1a\u9009\u4fee\u8bfe\u7a0b","text":""},{"location":"courses-notes/#_5","title":"\u901a\u8bc6\u9009\u4fee\u8bfe\u7a0b","text":""},{"location":"courses-notes/computer-system/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf I","text":"<p>\u8be5\u7b14\u8bb0\u4e3b\u8981\u6839\u636e\u5218\u8001\u5e08\u7684\u8bfe\u4ef6\u5185\u5bb9\u7f16\u5199\uff0c\u5e76\u4e0d\u4e00\u5b9a\u6309\u7167\u8bfe\u672c\u987a\u5e8f</p>"},{"location":"courses-notes/computer-system/#todolist","title":"TODOLIST","text":"<ul> <li> Lec1 Information Representation </li> <li> Lec2 Foundations of Digital Logic </li> <li> Lec3 Combinational Logic Design </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lab2/","title":"computer system Lab2","text":"<p>title: \u8ba1\u7b97\u673a\u7cfb\u7edf I - Lab2 date: 2025-02-28 18:41:00 categories:     - \u8bfe\u7a0b\u7b14\u8bb0     - \u8ba1\u7b97\u673a\u7cfb\u7edf tags:</p> <p>half adder \u534a\u52a0\u5668 : \u5c06\u4e24\u4e2a\u4e00\u4f4d\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0\uff0c\u8f93\u51fa\u548c \\(S\\) \u4e0e\u8fdb\u4f4d \\(C\\)</p> <p>full adder \u5168\u52a0\u5668 \uff1a \u5c06\u4e24\u4e2a\u4e00\u4f4d\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0\uff0c\u5e76\u6839\u636e\u6536\u5230\u7684\u4f4e\u4f4d\u8fdb\u4f4d\u4fe1\u53f7 \\(C_{in}\\)\uff0c\u8f93\u51fa\u548c \\(S\\) \u4e0e\u8fdb\u4f4d \\(C_{out}\\)</p> <p>\\(\\(S=A\\oplus B\\oplus C\\)\\)\u200b</p> \\[C_{out}=AB+C_{in}\\cdot(A\\oplus B)\\] <p>\u200b    </p> <p><code>input</code> \u4e0e <code>output</code> \u9ed8\u8ba4\u662f <code>wire</code> \u7c7b\u578b</p> <p>\u4e3b\u8981\u6d89\u53ca\u4e24\u4e2a\u7c7b\u578b <code>wire</code> \u4e0e <code>register</code></p> <p><code>wire</code> \uff1a \u6839\u636e\u8f93\u5165\u4fdd\u6301\u9ad8\u4f4e\u7535\u4f4d</p> <p><code>register</code> \uff1a \u53ef\u4ee5\u5728\u4e0d\u60f3\u505a\u4fee\u6539\u65f6\u4fdd\u6301\u539f\u6709\u72b6\u6001</p> <p><code>assign</code> \uff1a\u4f5c\u8d4b\u503c</p> <pre><code>AND_GATE #(.BubblesMask(2'b00))\n\n   GATES_1 (.input1(s_logisimNet2),\n\n        .input2(s_logisimNet0),\n\n        .result(s_logisimNet6));\n\nXOR_GATE_ONEHOT #(.BubblesMask(2'b00))\n\n   GATES_2 (.input1(s_logisimNet2),\n\n        .input2(s_logisimNet0),\n\n        .result(s_logisimNet4));\n\nXOR_GATE_3_INPUTS_ONEHOT #(.BubblesMask(3'b000))\n\n   GATES_3 (.input1(s_logisimNet2),\n\n        .input2(s_logisimNet0),\n\n        .input3(s_logisimNet5),\n\n        .result(s_logisimNet1));\n\nAND_GATE #(.BubblesMask(2'b00))\n\n   GATES_4 (.input1(s_logisimNet4),\n\n        .input2(s_logisimNet5),\n\n        .result(s_logisimNet3));\n\nOR_GATE #(.BubblesMask(2'b00))\n\n   GATES_5 (.input1(s_logisimNet6),\n\n        .input2(s_logisimNet3),\n\n        .result(s_logisimNet7));\n</code></pre> <p><code>AND_GATE</code> \u5b9e\u4f8b\u5316\u6a21\u5757</p> <p><code>GATES_1</code> \u5b9e\u4f8b\u5316\u540d</p> <p><code>#(.BubblesMask(2'b00))</code> \u53c2\u91cf\u5316\uff0c\u901a\u8fc7<code>#</code>\u6765\u89c4\u5b9a <code>BubblesMask</code>\u7684\u503c</p> <pre><code>(.input1(s_logisimNet2),\n\n .input2(s_logisimNet0),\n\n .result(s_logisimNet6))\n</code></pre> <p>\u7ed9\u6a21\u5757\u63a5\u7ebf</p> <p>{% note info %}</p> <p><code>BubblesMask</code> \u63a7\u5236\u4f4d\u7684\u53cd\u8f6c\uff1a</p> <pre><code>assign  s_realInput1 = (BubblesMask[0] == 1'b0) ? input1 : ~input1;\nassign  s_realInput2 = (BubblesMask[1] == 1'b0) ? input2 : ~input2;\n</code></pre> <p>{% endnote %}</p>"},{"location":"courses-notes/computer-system/computer-system-Lec1/","title":"Information Representation","text":""},{"location":"courses-notes/computer-system/computer-system-Lec1/#binary-number-represent","title":"Binary Number Represent","text":"<ul> <li>Information variables represented by physical quantities.</li> <li>For digital systems, the variables take on discrete values.</li> <li>Two level, or binary values are most prevalent values in digital system.</li> <li>Binary values are represented abstractly by:</li> <li>digits \\(0\\) and \\(1\\)</li> <li>words (symbols) <code>False</code> (\\(F\\)) and <code>Ture</code> (\\(T\\))</li> <li>words (symbols) <code>Low</code> (\\(L\\)) and <code>High</code> (\\(H\\))</li> <li>and words <code>On</code> and <code>Off</code></li> <li>Binary values are represented by values or ranges of values of physical quantities.</li> </ul> <ul> <li>Analog : continuous in value &amp; time</li> <li>Digital : discrete in value<ul> <li>Asynchronous \u5f02\u6b65 : continuous in time</li> <li>synchronous \u540c\u6b65 : Discrete in time</li> </ul> </li> </ul> <p>Note</p> <p>\u8ba1\u7b97\u673a\u662f\u7531\u65f6\u949f\u4fe1\u53f7\u63a7\u5236\uff0c\u6545\u5176\u4e3a synchronous \u540c\u6b65\u3002</p> <p></p> <ul> <li>threshold region : The fact that the input ranges are wider than the output ranges allows the circuits to function correctly in spite of variations in their behavior and undesirable \u201cnoise\u201d voltages that may be added to or sub-tracted from the outputs. </li> <li>noise margin \u566a\u58f0\u5bb9\u9650 : Maximum allowable noise (0.1~0.4 &amp; 0.6~0.9 in picture)</li> </ul> <p>Note</p> <p>\u8f93\u51fa\u8981\u6c42\u6bd4\u8f93\u5165\u8981\u6c42\u66f4\u52a0\u4e25\u683c\uff0c\u4ee5\u4fdd\u8bc1\u5176\u6297\u5e72\u6270\u80fd\u529b\u3002</p> Why is binary used? <p>Other values need more range. So it would require complex and costly electronic circuits, and the output still could be disturbed by small \u201cnoise\u201d voltages or small variations in the circuits occurring  during their manufacture or use. As a consequence, the use of such multivalued circuits is very limited.  </p> <ul> <li> <p>Other physical quantities:</p> <ul> <li>CPU : voltage</li> <li>Disk : magnetic field direction</li> <li>CD : surface pits/light</li> <li>DRAM \u5185\u5b58\u6761 : electrical charge \u7535\u5bb9</li> </ul> </li> <li> <p>Carry Counting System : positive radix, positional number systems.</p> <p>A number with radix \\(r\\) is represented by string of digits : </p> \\[A_{n-1}A_{n-2}...A_1A_0.A_{-1}A_{-2}...A_{-m+1}A_{-m}\\] <p>in which \\(0 \\leq A_i \\leq r\\) and <code>.</code> is the radix point.</p> <p>The string of digits represents the power series \u5168\u5c55\u5f00\u5f0f : </p> \\[(Number)_r=\\begin{matrix}\\underbrace{(\\sum_{i=0}^{n-1}A_i \\times r^i)}\\\\\\text{Interger protion}\\end{matrix}+\\begin{matrix}\\underbrace{(\\sum_{j=-1}^{-m}A_j \\times r^j)}\\\\\\text{Fraction protion}\\end{matrix}\\] </li> <li> <p>converting R-Base to Decimal : \\(\\sum (\\text{digit} \\times \\text{respective power of R})\\)\u200b</p> </li> <li> <p>converting Decimal to R-Base : Repeatedly divide integral part. Repeatedly multiply the fractional part. Join the two results with a radix point.</p> </li> </ul> <p>Warning</p> <p>the process of fractional part may repeat forever.</p> Solution <p>Specify number of bits to right of radix point and round or truncate to this number.</p> <ul> <li>Special Powers of 2 :<ul> <li>\\(2^{10} = 1024\\) is <code>Kilo</code>, denoted <code>K</code></li> <li>\\(2^{20} = 1048576\\) is <code>Mega</code>, denoted <code>M</code></li> <li>\\(2^{30} = 1073741824\\) is <code>Giga</code>, denoted <code>G</code></li> <li>\\(2^{40} = 1099511627776\\) is <code>Tera</code>, denoted <code>T</code></li> </ul> </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec1/#representation-of-numeric-data","title":"representation of numeric data","text":"<ul> <li>fixed-point \u5b9a\u70b9 ([sign, unsigned] integer number) / floating-point \u6d6e\u70b9 (real number)</li> </ul> <p>Note</p> <p>\u5b9a\u70b9\u540c\u6837\u53ef\u4ee5\u8868\u793a\u5c0f\u6570\uff0c\u4f46\u9700\u8981\u63d0\u524d\u56fa\u5b9a\u5c0f\u6570\u4f4d</p> <ul> <li>machine number / true number</li> <li> <p>sign integer encoding methods</p> <ul> <li>sign-and-magnitude : the value parts of positive and negative is same (two ways to represent 0)</li> <li> <p>complements</p> <ul> <li>1\u2019s complement : \u53cd\u7801 \\(\\sim x\\)</li> <li>2\u2019s complement : \u8865\u7801 \\((\\sim x) + 1\\)</li> <li>two\u2019s biased notation: \\(((\\sim x) + 1) + 2 ^ n\\)</li> </ul> <p>Note</p> <p>\u4e5f\u53eb\u79fb\u7801\uff0c\u4fdd\u8bc1\u673a\u5668\u7801\u548c\u771f\u503c\u7684\u76f8\u5bf9\u5927\u5c0f\u76f8\u540c</p> </li> <li> <p>sign extension : copy the sign bit to the remaining bits</p> </li> <li>truncating</li> <li>negation : \\(x + \\sim x = -1 \\to -x = \\sim x + 1\\)</li> <li>reflect on fractional binary numbers : bits to right of binary point represent the fractional powers of 2.</li> <li>floating point numbers : larger number range / fractions / precision</li> <li>floating point:<ul> <li>in binary : \\(\\pm 1.\\overline{xxxx}_2 * 2^{\\overline{yyyy}}\\)</li> <li>\\(\\pm\\) : sign</li> <li>\\(\\overline{xxxx}\\) : fractions (accuracy)</li> <li>\\(\\overline{yyyy}\\) : exponent (range)</li> <li>sign + exponent + fractions (convenient to compare)</li> </ul> </li> <li> <p>IEEE 754 : 1 sign + 8 exponent + 23 fractions </p> <ul> <li>\\(x = (-1)^s \\times (1 + \\text{fraction}) \\times 2 ^ {\\text{exponent - bias}}\\)</li> <li>single bias = 127</li> <li>double (1 + 11 + 52) bias = 1023</li> </ul> <p>Note</p> <ul> <li>double \u76f8\u6bd4 single \u4e3b\u8981\u589e\u52a0\u5c0f\u6570\u7cbe\u5ea6</li> <li>exponent \u5168 0 \u4e0e\u5168 1 \u6709\u7279\u6b8a\u542b\u4e49<ul> <li>\u5168 0 : hidden bit is 0 \\(\\text{sign} \\times (0 + \\text{fraction}) \\times 2 ^ {\\text{1 - bias}}\\)</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec2/","title":"Foundations of Digital Logic","text":""},{"location":"courses-notes/computer-system/computer-system-Lec2/#binary-logic-and-gates","title":"Binary logic and gates","text":"<ul> <li>logic gate : logic gates implement logic functions.</li> <li> <p>boolean algebra : a useful mathematical system for specifying and transforming logic functions.</p> </li> <li> <p>AND : is denoted by a dot ( \\(X \\cdot Y\\) )</p> </li> <li>OR : is denoted by a plus ( \\(X+Y\\) )</li> <li>NOT : is denoted by an overbar ( \\(\\bar{X}\\) ), a single quote mark ( \\(X'\\) ), or ( \\(\\sim X\\) )</li> <li>perform logic functions : inversion ( \\(NOT\\) ) , \\(AND\\) , \\(OR\\) , \\(NAND\\) , \\(NOR\\) , etc.</li> <li>single-input : \\(NOT\\) gate, buffer</li> <li>two-input : \\(AND\\) , \\(OR\\) , \\(XOR\\) , \\(NAND\\) , \\(NOR\\) , \\(NXOR\\)</li> <li>multiple-input</li> </ul> <p></p> <p>Note</p> <ul> <li>buffer (\u7f13\u51b2\u5668) \u7684\u903b\u8f91\u529f\u80fd\u662f \\(F=X\\) \uff0c\u5b9e\u9645\u53ef\u7528\u4f5c\u4fe1\u53f7\u653e\u5927\uff0c\u901f\u5ea6\u5339\u914d\u7b49\u529f\u80fd\u3002</li> <li>\u4efb\u4f55\u51fd\u6570\u90fd\u53ef\u8f6c\u5316\u6210 \u4e0e\u975e \u6216 \u6216\u975e\uff08\u5fb7\u6469\u6839\u5f8b\uff09\uff0c\u6545 \u4e0e\u975e\u95e8 \u548c \u6216\u975e\u95e8 \u53c8\u79f0 universal gate \u901a\u7528\u95e8</li> <li>\u6b63\u903b\u8f91\u662f\u9ad8\u7535\u5e73\u5bf9 \\(T\\)\uff0c \u4f4e\u7535\u5e73\u5bf9 \\(F\\)\uff0c\u8d1f\u903b\u8f91\u53cd\u4e4b\u3002</li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec2/#some-ic-parameters","title":"Some IC Parameters","text":"<ul> <li> <p>\\(V_{cc}\\) : power supply voltage</p> <ul> <li>Common across a logic family (e.g., 5V for all HC parts)</li> <li>\\(V_{CC}\\) and \\(GND\\) commonly called <code>power supply tails</code> (Sometimes \\(V_{DD}\\) and \\(V_{SS}\\) for \\(CMOS\\) devices)</li> </ul> </li> <li> <p>Logic level : range of voltages for 0 and 1</p> </li> <li> <p>Noise : anything degrade the voltages</p> </li> <li> <p>Delay Models</p> <ul> <li> <p>Propagation delay \u4f20\u8f93\u5ef6\u8fdf( \\(T_{pd}\\) , \\(T_{plh}\\) , \\(T_{phl}\\) ) : Outputs don't instantaneously reflect input changes. Propagation delay is a measure of this time</p> <ul> <li>Delay from H to L can be different than from L to H</li> </ul> <p></p> <p>Note</p> <p>\\(T_{pd}\\) \u6839\u636e\u9700\u6c42\u7531 \\(T_{plh}\\) , \\(T_{phl}\\) \u7b97\u51fa (\u5e73\u5747\u503c\uff0c\u6700\u5927\u503c ...... )</p> </li> <li> <p>Inertial delay \u7f13\u51b2\u5ef6\u8fdf : input changes cause the output to changes twice in an interval less than the rejection time, then the first of the output changes doesn't occur.</p> <p></p> </li> </ul> </li> <li> <p>Transition Time \u8dc3\u8fc1\u65f6\u95f4 (Rise &amp; Fall) : Takes time for signal to reach its output voltage</p> <ul> <li>will be affected by capacitance, fan-out</li> <li>also known as slew rate</li> <li>typically measured from 10% / 90% of \\(V_{OL}\\) / \\(V_{OH}\\) swing</li> </ul> <p></p> <p>Note</p> <p>\u8dc3\u8fc1\u65f6\u95f4\u540c\u6837\u6709\u9650\u5236 </p> </li> <li> <p>Power Dissipation :</p> <ul> <li> <p>Static (<code>quiescent</code>) power dissipation : </p> \\[P_S = I_{DD} \\times V_{CC}\\] <p>\\(I_{DD}\\) is the quiescent supply current (also called the leakage current)</p> </li> <li> <p>Dynamic power dissipation :</p> \\[P_D = (C_{PD} + C_L) \\times V_{CC}^2 \\times f\\] <p>\\(C_{PD}\\) = power dissipation capacitance (constant for logic family)</p> <p>\\(C_L\\) = capacitive load on output (driving other devices)</p> <p>\\(f\\) = transition frequency ( \\(0.5\\times \\text{number of output transition}\\) )</p> </li> </ul> </li> <li> <p>Fan-in &amp; Fan-out :</p> <ul> <li> <p>Fan-in : the maximum number of input signals that feed the input equations of a logic cell.</p> </li> <li> <p>Fan-out : the maximum number of output signals that are fed by the output equations of a logic cell.</p> <ul> <li> <p>Fan-out can be defined in terms of standard load ( <code>SL</code> )</p> <p>Example</p> <p>1 standard load equals the load contributed by the input of 1 inverter.</p> </li> <li> <p>Transition time : the time required for the gate output to change from \\(H\\) to \\(L\\) ( \\(t_{HL}\\) ), or from \\(L\\) to \\(H\\), \\(t_{LH}\\)</p> </li> <li> <p>the maximum fan-out that can be driven by a gate is the number of standard loads the gate can drive without exceeding its specified maximum transition time</p> </li> <li> <p>The fan-out loading of a gate's output affects the gate's propagation delay</p> <p>Example</p> <ul> <li> <p>One equation for \\(t_{pd}\\) for a \\(NAND\\) gate with 4 input is :</p> \\[t_{pd} = 0.07+0.021 \\text{ SL ns}\\] </li> <li> <p>\\(\\text{SL}\\) is the number of standard loads the gate is driving, i. e., its fan-out in standard loads</p> </li> <li> <p>For \\(\\text{SL = 4.5}\\), \\(t_{pd} = 0.1645 \\text{ ns}\\)</p> </li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Gate Cost : chip area, number and size of transistors, amount of wiring, gate input count (rough measure)</p> </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec2/#boolean-algebra","title":"Boolean Algebra","text":"<ul> <li>Boolean Operatoe Precedence :<ol> <li>Parentheses</li> <li>NOT</li> <li>AND</li> <li>OR</li> </ol> </li> <li>Some properties of Identities &amp; the Algebra :<ul> <li>The dual \u5bf9\u5076 of an algebraic expression is obtained by interchanging \\(+\\) and \\(\\cdot\\) and interchanging 0's and 1's (can't change calculate order)</li> </ul> </li> </ul> <p>Example</p> dual example 1dual example 2dual example 3 \\[F = (A+\\bar{C})\\cdot B + 0\\] Solution \\[\\text{dual } F = (A\\cdot \\bar{C} + B) \\cdot 1 = A \\cdot \\bar{C} + B\\] \\[G = (X+Y) \\cdot (\\overline{W\\cdot Z})\\] Solution \\[\\text{dual }G = X\\cdot Y+(\\overline{W+Z})\\] \\[H = A\\cdot B + A\\cdot C + B\\cdot C\\] <p>Note</p> <p>\\(H\\) \u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e09\u4eba\u7684\u6295\u7968\u5668</p> Solution \\[\\text{dual }H = (A+B)\\cdot(A+C)\\cdot(B+C)\\] <p>Note</p> <p>\\(H = \\text{dual } H\\) \uff0c \u6545\u5176\u4e5f\u79f0\u4e3a\u81ea\u5bf9\u5076 </p> <p>Note</p> <p>\u82e5 \\(A = B\\) \uff0c \u5219 \\(\\text{dual }A = \\text{dual }B\\) </p>"},{"location":"courses-notes/computer-system/computer-system-Lec2/#logic-functions","title":"Logic functions","text":"<p>\u903b\u8f91\u51fd\u6570\u662f\u53cd\u6620\u8f93\u5165\u53d8\u91cf\u548c\u8f93\u51fa\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u903b\u8f91\u5173\u7cfb\u8868\u8fbe\u5f0f</p> \\[F(X_1, X_2, ... , X_n)\\] <p>Note</p> <ul> <li>\u65f6\u5e8f\u7535\u8def\u6709\u5b58\u50a8\u529f\u80fd\uff0c\u8f93\u51fa\u7531\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u51b3\u5b9a</li> <li>\u7ec4\u5408\u7535\u8def\u53ea\u8981\u8f93\u5165\u53bb\u786e\u5b9a\uff0c\u8f93\u51fa\u4fbf\u786e\u5b9a</li> </ul> <ul> <li>representations of logic functions : truth table, waveforms...</li> </ul> <p>Warning</p> <p>Unlike truth tables, expressions representing a Boolean function are NOT unique.</p> <p>e.g., </p> \\[F(x,y,z)=\\bar x\\bar y\\bar z+\\bar xy\\bar z+xy\\bar z\\] \\[G(x,y,z)=\\bar x\\bar y\\bar z+y\\bar z\\] <p>they are identical.</p> <ul> <li>Complement of a Function \uff08 \\(F'\\) \uff09: The complement of a function id derived by interchanging ( \\(\\cdot\\) and \\(+\\) ) , and (1 and 0) , complementing each variable. (So it IS NOT THE SAME as the dual of a function)</li> </ul> <p>Example</p> <p>Find the complement of</p> \\[F(x,y,z)=x\\bar y\\bar z+\\bar xyz\\] Solution \\[\\begin{aligned}F' &amp; = (x\\bar y\\bar z+\\bar xyz)' \\\\ &amp; = \\overline{x\\bar y\\bar z} \\cdot \\overline{\\bar xyz} \\qquad \\text{ (DeMorgam)} \\\\ &amp; = (\\bar x+y+z) \\cdot (x+\\bar y+\\bar z) \\qquad \\text{ (DeMorgam again)} \\end{aligned}\\] <p>Note</p> <ul> <li>\u82e5 \\(A = B\\) \uff0c \u5219 \\(A' = B'\\) </li> <li>\u53cd\u51fd\u6570\u7684\u8f93\u51fa\u4e0e\u539f\u51fd\u6570\u76f8\u53cd</li> </ul> <ul> <li> <p>Canonical and Standard Forms :</p> <ul> <li> <p>Literal : A variable or its complement</p> </li> <li> <p>Product term : literals connected by \\(\\cdot\\)</p> </li> <li> <p>Sum term : literals connected by \\(+\\)</p> </li> <li> <p>Minterm : a product term in which all the variables appear exactly once, either complemented or not. (denoted by \\(m_j\\) )</p> <p>Example</p> <p>Assume 3 variables ( \\(X\\) , \\(Y\\) , \\(Z\\) ) , and \\(j = 3\\) . Then \\(b_j=011\\) and its corresponding minterm is denoted by \\(m_j=\\bar XYZ\\)</p> </li> <li> <p>Maxterm : a sum term in which all the variables appear exactly once, either complemented or not. (denoted by \\(m_j\\) )</p> <p>Example</p> <p>Assume 3 variables ( \\(X\\) , \\(Y\\) , \\(Z\\) ) , and \\(j = 3\\) . Then \\(b_j=011\\) and its corresponding minterm is denoted by \\(m_j= X+\\bar Y+\\bar Z\\)</p> </li> <li> <p>Canonical forms : </p> <ul> <li> <p>Canonical Sum-Of-Products (SOP) : sum of minterms</p> </li> <li> <p>Canonical Product-Of-Sum (POS) : product of maxterms</p> <p>Note</p> <p>\u591a\u7ea7\u7535\u8def\u6210\u672c\u4f1a\u964d\u4f4e\uff0c\u4f46\u6027\u80fd\u4f1a\u53d8\u5dee</p> </li> </ul> </li> <li> <p>Standard Forms : similar as canonical forms, except that not all variables need appear in the individual product ( SOP ) or sum ( POS ) terms.</p> <p>Example</p> <ul> <li>\\(f1(x,y,z) = \\bar x\\bar yz+y\\bar z+x\\bar z\\) is a standard SOP form</li> <li>\\(f1(x,y,z) = (x+y+z)\\cdot(\\bar y+\\bar z)\\cdot(\\bar x+\\bar z)\\) is a standard POS form</li> </ul> </li> </ul> </li> </ul> <p>Example</p> <p>calculate canonical SOP and POS of</p> x y z f 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 0 Solution <p>SOP is</p> \\[\\begin{aligned} f(x,y,z) &amp; =m_1+m_2+m_4+m_6 \\\\ &amp; = \\bar x\\bar yz+\\bar xy\\bar z+x\\bar y\\bar z+xy\\bar z\\end{aligned}\\] <p>POS is</p> \\[\\begin{aligned} f(x,y,z) &amp; =M_0\\cdot M_3\\cdot M_5\\cdot M_7 \\\\ &amp; = (x+y+z)\\cdot (x+\\bar y+\\bar z)\\cdot (\\bar  x+y + \\bar z)\\cdot (\\bar x+\\bar y+\\bar z)\\end{aligned}\\] <p>Note</p> <ul> <li>Observe that \\(m_j = M_j'\\)</li> <li>Shorthand : \\(f(x,y,z) = \\sum m(1,2,4,6) = \\prod M(0,3,5,7)\\)</li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec2/#simplification-of-logic-functions","title":"Simplification of Logic Functions","text":"<ul> <li>Literal Cost : The number of literal appearances in a Boolean expression corresponding to the logic circuit diagram. ( \\(L\\) )</li> </ul> <p>Example</p> \\[F_1 = BD+A\\bar BC+A\\bar C\\bar D\\] \\[F_2 = BD+A\\bar BC+A\\bar C\\bar D+AB\\bar C\\] \\[F_3=(A+B)(A+D)(B+C+\\bar D)(\\bar B + \\bar C + D)\\] <p>which solution is best?</p> Solution \\[L_1 = 8\\] \\[L_2 = 11\\] \\[L_3 = 10\\] <p>so choose \\(F_1\\)</p> <ul> <li>Gate Input Cost : The number of inputs to the gates in the implementation corresponding exactly to the given equation or equations. ( \\(G\\) - inverters not counted, \\(GN\\) - inverters counted)</li> </ul> <p>Example</p> gate cost example 1gate cost example 2 \\[F_1 = BD+A\\bar BC+A\\bar C\\bar D\\] \\[F_2 = BD+A\\bar BC+A\\bar C\\bar D+AB\\bar C\\] \\[F_3=(A+B)(A+D)(B+C+\\bar D)(\\bar B + \\bar C + D)\\] <p>which solution is best?</p> Solution \\[L_1 = 8,G_1=11,GN_1=14\\] \\[L_2 = 11,G_2=15,GN_2=18\\] \\[L_3 = 10,G_3=14,GN_3=17\\] <p>so choose \\(F_1\\)</p> <p>calculate the cost of</p> \\[F=A+BC+\\bar B \\bar C\\] Solution <p></p> \\[L=5\\] \\[G=L+2 = 7\\] \\[GN = L+2=9\\] <p>Warning</p> <p>\u5355\u53d8\u91cf\u5e76\u4e0d\u5305\u542b\u5728 \\(G\\) \u7684\u8ba1\u7b97\u4e2d\uff0c\u56e0\u4e3a\u5176\u5728 \\(L\\) \u4e2d\u5df2\u88ab\u8ba1\u7b97\u8fc7</p> <ul> <li> <p>Boolean Function Optimization :  minimizing the gate input (or literal) cost of a (a set of) Boolean equation(s) reduces circuit cost.</p> <ul> <li>Treat optimum or near-optimum cost functions for two-level ( SOP and POS ) circuits first.</li> </ul> <p>Note</p> <p>\u4e00\u822c\u5316\u7b80\u6210 SOP \uff0c\u66f4\u7b26\u5408\u601d\u7ef4\u903b\u8f91\u3002\u82e5\u8981\u6c42\u5316\u7b80\u6210 POS\uff0c\u4e00\u822c\u5148\u5bf9\u5076\u539f\u5f0f\uff0c\u5316\u6210 SOP \u518d\u5bf9\u5076\u3002</p> </li> <li> <p>Algebraic Manipulation :</p> </li> </ul> <p>Example</p> algebraic manipulation example 1algebraic manipulation example 2 <p>Simplify</p> \\[F=\\bar xyz+\\bar xy\\bar z + xz\\] Solution \\[\\begin{aligned} F &amp;= \\bar xy(z+\\bar z) + xz \\\\ &amp;= \\bar xy+xz\\end{aligned}\\] <p>Simplify</p> \\[F(A,B,C)=\\sum m(1,4,5,6,7)\\] Solution <p>unfinished</p> <ul> <li> <p>Karnaugh Maps ( K-map ) : Matrix with \\(2^n\\) cells</p> <p>Karnaugh Maps are graphical representations of boolean functions.</p> <p>One map cell corresponds to a row in the truth table</p> <p>Also, one map cell corresponds to a minterm or a maxterm in the boolean expression</p> <p>Multiple-cell areas of the map correspond to standard terms.</p> <p></p> </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec2/#additional-gates-and-circuits","title":"Additional Gates and Circuits","text":"<ul> <li>Transmission gate : cost is 1</li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec3/","title":"Combinational Logic Design","text":""},{"location":"courses-notes/computer-system/computer-system-Lec3/#about-combinational-logic-circuits","title":"About combinational logic circuits","text":"<ul> <li> <p>combinational circuits / sequential circuit</p> </li> <li> <p>combinational gate:</p> </li> <li>a node can only be the output of one element (except 3-stage gate, can use control signal to avoid)</li> <li>loop is not allowed (it will lead memory function)</li> <li>design choice:</li> <li>2-level &amp; multi-level<ul> <li>gate delay</li> <li>fan-in / fan-out</li> <li>trade-off between cost and speed</li> </ul> </li> <li> <p>functional blocks</p> </li> <li> <p>procedure :</p> </li> <li>Specification : <ul> <li>use text, HDL... to write specification</li> </ul> </li> <li>formulation :<ul> <li>derive a truth table or initial boolean equations to define the required relationships between the inputs and outputs (\u903b\u8f91\u8d4b\u503c)</li> </ul> </li> <li>optimization :<ul> <li>2-level or mulitple-level</li> </ul> </li> <li>technology mapping :<ul> <li>map the logic diagram to netlist to the implementation technology selected.</li> </ul> </li> <li>verification</li> </ul> <p>Note</p> <ul> <li>\u884c\u4e3a\u63cf\u8ff0\uff1a\u63cf\u8ff0\u4e00\u4e2a\u903b\u8f91\u529f\u80fd \u95e8\u7ea7\u63cf\u8ff0\uff1a\u5229\u7528\u5229\u7528\u95e8\u7ea7\u7b26\u53f7\u63cf\u8ff0</li> <li>AOI : \u4e0e\u6216\u975e\u95e8</li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec3/#some-classicbasic-designs","title":"Some classic/basic designs","text":"<ul> <li> <p>multiple-bit rudimentary functions : a wide line is used to represent a bus which is a vector signal</p> </li> <li> <p>decoding : the conversion of an n-bit input code to an m-bit output with \\(n \\leq m \\leq 2^n\\) such that each valid code word produces a unique output, each output represent a minterm (n-to-m line decoders).</p> </li> </ul> <p>Note</p> <ul> <li>\u5730\u5740\u8bd1\u7801\u5668\uff0c\u663e\u5f0f\u8bd1\u7801\u5668\u2026\u2026</li> <li>\u591a\u8f93\u5165\u7684\u8bd1\u7801\u5668\u53ef\u4ee5\u62c6\u6210\u591a\u4e2a\u8f93\u5165\u8f83\u5c0f\u7684\u8bd1\u7801\u5668</li> </ul> <p>Example</p> <p>\\(\\text{7-128 decoders} = \\text{3-8 decoders} + \\text{4-16 deciders} + 8 \\times 16 \\text{ 2-input AND gate}\\)</p> <ul> <li>demulitiplexer : \u5e26\u59cb\u80fd\u7684\u8bd1\u7801\u5668</li> </ul> <p>Note</p> <p>\u8bd1\u7801\u5668\u52a0\u6216\u95e8\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u51fd\u6570</p> <ul> <li> <p>\u4e03\u6bb5\u6570\u7801\u7ba1</p> <ul> <li>display\u2014\u2014common Anode/Common Cathode</li> </ul> </li> <li> <p>Encoder :</p> <ul> <li>priority encoder: highest priority\u2026</li> </ul> </li> <li> <p>Multiplexer : \\(n\\) control inputs ( \\(S\\) ), and \\(m\\) information inputs ( \\(I\\) )</p> <ul> <li>2-to-1-Line Multiplexer : \\(Y = \\overline{SI_0}+SI_1\\) (decoder + AND-OR)</li> <li>Other selection implementation :  Using 3-state logic / transmission gate in place AND-OR / decoder</li> </ul> <p>Note</p> <ul> <li>\u6570\u7801\u7ba1\u6570\u5b57\u5206\u522b\u5feb\u901f\u5faa\u73af\u663e\u793a\uff0c\u89c6\u89c9\u6682\u7559\u5bfc\u81f4\u50cf\u540c\u65f6\u51fa\u73b0</li> <li>\u591a\u8def\u9009\u62e9\u5668\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u51fd\u6570\uff0c\u4e0d\u8fc7\u5f00\u9500\u8f83\u5927</li> <li>\u5c06\u67d0\u4e2a\u63a7\u5236\u4fe1\u53f7\u653e\u5230 \\(I\\) \u53ef\u4ee5\u51cf\u5c0f\u5f00\u9500</li> <li>one-time programming / FPGA</li> </ul> </li> </ul>"},{"location":"courses-notes/computer-system/computer-system-Lec3/#timing-analysis","title":"Timing Analysis","text":"<ul> <li>Propagation delay : \\(T_{pd} = \\text{max delay from input to output}\\)</li> <li> <p>Contamination delay : \\(T_{cd} = \\text{min delay from input to output}\\)</p> </li> <li> <p>The critical (longest) path : \\(T_{pd} \\text{ of the circuit} = \\sum \\text{all } T_{pd} \\text{ of circuit elements along the critical path}\\)</p> </li> <li> <p>The shortest path : \\(T_{cd} \\text{ of the circuit} = \\sum \\text{all } T_{cd} \\text{ of circuit elements along the shortest path}\\)</p> </li> <li> <p>Race hazard</p> </li> <li>Glitch : when a single input change causes multiple output changes.</li> </ul>"},{"location":"courses-notes/discrete-mathematics/","title":"\u79bb\u6563\u6570\u5b66\u7406\u8bba\u57fa\u7840","text":"<p>\u79bb\u6563\u6570\u5b66\u662f\u57fa\u672c\u4e0a\u662f\u7814\u7a76\u975e\u8fde\u7eed\u7684\u79bb\u6563\u6570\u5b66\u7ed3\u6784\u7684\u4e00\u95e8\u5b66\u79d1\uff0c\u4e0e\u57fa\u4e8e\u5b9e\u6570\u201c\u5149\u6ed1\u6027\u201d\u7684\u8fde\u7eed\u6027\u76f8\u6bd4\uff0c\u79bb\u6563\u6570\u5b66\u7684\u7814\u7a76\u5bf9\u8c61\u4e3b\u8981\u662f\u6574\u6570\uff0c\u56fe\u8bba\uff0c\u96c6\u5408\u8bba\uff0c\u6570\u7406\u903b\u8f91\u7b49\u975e\u5e38\u8fde\u7eed\u53d8\u91cf\u7684\u5b66\u79d1\uff0c\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bb2\uff0c\u79bb\u6563\u6570\u5b66\u4e3b\u8981\u7814\u7a76\u53ef\u6570\u96c6\u4e0a\u7684\u5bf9\u8c61\u6027\u8d28\u7684\u6570\u5b66\u5206\u652f\uff0c\u5b83\u6240\u7814\u7a76\u7684\u5bf9\u8c61\u662f\u79bb\u6563\u7684\u6570\u91cf\u5173\u7cfb\u548c\u79bb\u6563\u7ed3\u6784\u7684\u6570\u5b66\u6a21\u578b\u3002</p> <ul> <li> Ch1 The Foundations: Logic and Proofs </li> <li> Ch2 Basic Structures: Sets, Functions, Sequences, Sums, and Matrices </li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/","title":"The Foundations: Logic and Proofs","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u9610\u91ca\u6784\u6210\u6b63\u786e\u6570\u5b66\u8bba\u8bc1\u7684\u8981\u7d20\uff0c\u5e76\u4ecb\u7ecd\u6784\u5efa\u8fd9\u4e9b\u8bba\u8bc1\u7684\u5de5\u5177\u3002\u6211\u4eec\u5c06\u5efa\u7acb\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u8bc1\u660e\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u9a8c\u8bc1\u591a\u79cd\u7c7b\u578b\u7684\u6570\u5b66\u7ed3\u8bba\u3002\u5728\u4ecb\u7ecd\u591a\u79cd\u8bc1\u660e\u65b9\u6cd5\u540e\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u6784\u5efa\u6570\u5b66\u8bc1\u660e\u7684\u82e5\u5e72\u7b56\u7565\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u63d0\u51fa\u731c\u60f3\u7684\u6982\u5ff5\uff0c\u5e76\u9610\u8ff0\u901a\u8fc7\u7814\u7a76\u731c\u60f3\u63a8\u52a8\u6570\u5b66\u53d1\u5c55\u7684\u5b8c\u6574\u8fc7\u7a0b\u3002 </p> <p>In this chapter, we will explain what makes up a correct mathematical argument and introduce tools to construct these arguments. We will develop an arsenal of different proof methods that will enable us to prove many different types of results. After introducing many different methods of proof, we will introduce several strategies for constructing proofs. We will introduce the notion of a conjecture and explain the process of developing mathematics by studying conjectures.</p>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#propositional-logic","title":"Propositional Logic \u547d\u9898\u903b\u8f91","text":""},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#propositions","title":"Propositions \u547d\u9898","text":"<ul> <li>proposition : a declarative sentence (either true or false).<ul> <li>propositional variables (or sentential variables) : use letters to present propositions ( \\(p\\) , \\(q\\) , \\(r\\) , \\(s\\) ...). \\(T\\) denote true. \\(F\\) denote false.</li> <li>atomic propositions : Propositions that cannot be expressed in terms of simpler propositions.   </li> </ul> </li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#connectives","title":"Connectives \u903b\u8f91\u8fde\u63a5\u8bcd","text":"<p>Many mathematical statements are constructed by combining one or more propositions. New propositions, called compound propositions, are formed from existing propositions using logical operators (also called connectives).</p> <ul> <li>negation : \\(\\lnot p\\) , is the statement <code>It is not the case that p.</code></li> </ul> <p>Note</p> <p>It also denoted by \\(\\bar{p}\\), \\(\\sim p\\) , \\(p'\\) , \\(Np\\) , \\(!p\\) .</p> <p>Example</p> negation example 1negation example 2 <p>Find the negation of the proposition <code>Michael's PC runs Linux.</code></p> Solution <p><code>It is not the case that Michael's PC tuns Linux.</code></p> <p><code>Michael's PC does not run Linux.</code></p> <p>Find the negation of the proposition <code>Vandana's smartphone has at least 32 GB of memory.</code></p> Solution <p><code>It is not the case that Vandana's smartphone has at least 32 GB of memory.</code></p> <p><code>Vandana's smartphone does not have at least 32 GB of memory.</code></p> <p><code>Vandana's smartphone has less than 32 GB of memory.</code></p> <ul> <li>conjunction : \\(p \\land q\\) , the proposition <code>p and q</code>.</li> </ul> <p>Example</p> <p>Find the conjunction of the propositions <code>Rebecca's PC has more than 16 GB free hard disk space.</code> and <code>The processor in Rebecca's PC runs faster than 1GHz.</code></p> Solution <p><code>Rebecca's PC has more than 16 GB free hard disk space, and the processor in Rebecca's PC runs faster than 1GHz.</code></p> <p><code>Rebecca's PC has more than 16 GB free hard disk space, and its processor runs faster than 1GHz.</code></p> <ul> <li>disjunction : \\(p \\lor q\\)  , the proposition <code>p or q</code> (inclusive or).</li> </ul> <p>Example</p> disjunction example 1disjunction example 2 <p>Translate the statement <code>Students who have taken calculus or introductory computer science can take this class</code> in a statement in propositional logic using \\(p\\) : <code>A student who has taken calculus can take this class</code> and \\(q\\) : <code>A student who has taken introductory computer science can take this class</code>.</p> Solution <p>\\(p \\lor q\\)  or <code>disjunction of p and q</code></p> <p>What's the disjunction of the propositions in conjunction's example?</p> Solution <p><code>Rebecca's PC has more than 16 GB free hard disk space, or the processor in Rebecca's PC runs faster than 1GHz.</code></p> <ul> <li>exclusive or : \\(p \\oplus q\\) </li> </ul> <p>Note</p> <p>It also denoted by \\(p\\) \\(XOR\\) \\(q\\).</p> <p>Example</p> exclusive or example 1exclusive or example 2 <p>What is the exclusive or of <code>A student can have a salad with dinner.</code> and <code>A student can have soup with dinner.</code>?</p> Solution <p><code>A student can have soup or salad, but not both, with dinner.</code></p> <p>Warning</p> <p>Note that this is often stated as <code>A student can have soup or salad with dinner</code> without explicitly stating that taking both is not permitted.</p> <p>Express the statement <code>I will use all my savings to travel to Europe or tu buy an electric car.</code> in propositional logic using the statement \\(p\\) : <code>I will use all my savings to travel to Europe.</code> and the statement \\(q\\) : <code>I will use all my savings to buy an electric car.</code></p> Solution <p>Student cannot both go to Europe and buy an electric car. Hence this can be expressed as</p> \\[p \\oplus q\\]"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#applications-of-propositional-logic","title":"Applications of Propositional Logic \u547d\u9898\u903b\u8f91\u7684\u5e94\u7528","text":""},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#translating-english-sentences-into-logical-expressions","title":"Translating English Sentences into logical expressions","text":""},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#system-specifications","title":"System Specifications","text":"<p>Systems specifications should be consistent, that is if it is possible to assign truth values to the proposition variables so that each proposition is true.</p> <p>Example</p> <p>Are there specifications consistent? <code>The diagnostic message is stored in the buffer or it is retransmitted</code> <code>The diagnostic message is not stored in the buffer</code> <code>If the diagnostic message is stored in the buffer, then it is retransmitted</code></p> Solution <p>Let \\(p\\) denote <code>The diagnostic message is stored in the buffer.</code> and \\(q\\) denote <code>The diagnostic message is retransmitted</code>. The specifications can be written as</p> \\[p \\lor q, \\lnot p, p \\to q\\] <p>they are all true if and only if \\(p\\) is false and \\(q\\) is true.</p> <p>What if <code>The diagnostic message is not retransmitted</code> is added?</p> Solution <p>new specification is</p> \\[\\lnot q\\] <p>which is false when \\(q\\) is true. Consequently, they are inconsistent.</p>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#boolean-searched","title":"boolean searched","text":"<p>Example</p> <ul> <li>Web Page Serching : For instance, using Boolean searching to find Web pages about universities in New Mexico, we can look for pages matching <code>NEW AND MEXICO AND UNIVERSITIES</code>.</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#logic-puzzles","title":"logic puzzles","text":"<p>Example</p> logic puzzles example 1logic puzzles example 2 <p>There is an island that has two kinds of inhabitants, knights, who always tell the truth, and their opposites, knaves, who always lie.</p> <p>\\(A\\) say <code>B is a knight.</code></p> <p>\\(B\\) say <code>we are opposite types.</code></p> <p>What are \\(A\\) and \\(B\\) ?</p> Solution <p>Let \\(p\\) and \\(q\\) be the statements that <code>A is a knight</code> and <code>B is a knight</code></p> <ul> <li>if \\(p\\) is true, then \\(q\\) is true, then \\((p \\land q) \\lor (\\lnot p \\land q)\\) is true, which is not.</li> <li>if \\(p\\) is false, then \\(q\\) is false, then \\((p \\land q) \\lor (\\lnot p \\land q)\\) is false.</li> </ul> <p>So we can conclude that both \\(A\\) and \\(B\\) are knaves.</p> <p>www.why3.org/doc/whyml.html#problem-o-einsteins-problem</p>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#inreoduction-to-proofs","title":"Inreoduction to Proofs","text":"<ul> <li>direct proof : use rule of inference axioms and logical equivalences to show that \\(q\\) must also true.</li> <li>proof by contraposition \u53cd\u8bc1\u6cd5 : \\(p \\to q \\equiv \\lnot q \\to \\lnot p\\)</li> <li>proof by contradiction \u5f52\u8c2c\u8bc1\u660e\u6cd5 : \\(\\text{T} \\to p \\equiv \\lnot p \\to \\text{F}\\)</li> <li>\\(p \\leftrightarrow q \\equiv p \\to q \\land q \\to p\\)</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch1/#proof-methods-and-strategy","title":"Proof Methods and Strategy","text":"<ul> <li>proof by cases : \\((\\bigvee_{i=1}^n p_i) \\to q \\equiv \\bigwedge_{i=1}^n p_i \\to q\\)</li> <li>similarly : \u540c\u7406\u53ef\u5f97</li> <li>without loss of generality\uff08WLOG\uff09: \u4e0d\u5931\u4e00\u822c\u6027</li> <li>existence proofs</li> <li>constructive</li> <li>no constructive : no \\(c\\) exists which makes \\(P(c)\\) true and derive a contradiction.</li> <li>counter examples</li> <li>Uniqueness proofs : existence + uniqueness</li> <li>backward reasoning</li> <li>universally quantified assertion</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/","title":"Basic Structures: Sets, Functions, Sequences, Sums, and Matrices","text":""},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#sets","title":"Sets","text":"<ul> <li>set : an unordered collection of objects </li> <li>objects in the set : members, or elements</li> <li>\\(S = {a, b, c, d} = {a, b, a, b, c, d}\\) (can repeat)</li> <li>\\(S = {a, b, c, d, \u2026 , z}\\)</li> <li>Important Set :</li> <li>Set - Builder Notation : \\(S = {x | P(x)}\\)</li> <li>universal set / empty set</li> </ul> <p>Russell\u2019s Paradox: S is a set of all sets are not members of themselves, Is S a member of itself?</p> <p>Note</p> <p>sets can be elements of sets.</p> <p>a empty set isn\u2019t a set containing a empty set</p> <ul> <li>equality</li> <li>subset : \\(\\forall x \\in A, x \\in B \\to A \\subseteq B\\)</li> <li>the proof of subset</li> <li>set cardinality : \\(|A|\\)</li> </ul> <p>Note</p> \\[|\\emptyset| = 0$$ $$|\\emptyset| = 1\\] <ul> <li>power sets : the set of all subsets of set \\(A\\), denoted \\(P(A)\\)</li> <li> <p>tuples: \\((a_1, a_2, \u2026, a_n)\\) (when \\(n = 2\\) , it also called ordered pair)</p> <ul> <li>Cartesian Product : \\(A \\times B = \\{(a, b) | a \\in A \\land b \\in B\\}\\)</li> </ul> <p>Note</p> <p>a subset of Cartesian Product is called relation</p> </li> <li> <p>Truth Sets of Quantifiers : \\(\\{x \\in D | P(x)\\}\\)</p> </li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#set-operations","title":"Set Operations","text":"<ul> <li>Union : \\(A \\cup B\\)</li> <li>Intersection : \\(A \\cap B\\)</li> <li>Complement :  \\(\\bar A\\)</li> <li>Difference : \\(A - B\\)</li> <li>Inclusion-Exclusion : \\(|A \\cup B| = |A| + |B| - |A \\cap B|\\)</li> <li>Set Identities : use set to replace proportion in proportion laws.</li> <li>the proof of identity</li> <li>\\(A\\subseteq B \\land B \\subseteq A\\)</li> <li>use set identities</li> <li>list all elements inbound each set</li> <li>Generalized unions and intersections</li> <li>using bit strings to represent sets.</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#functions","title":"Functions","text":"<ul> <li>functions : \\(f : A\\to B, f(a) = b\\)</li> </ul> <p>Note</p> <p>also can defined by a subset of A x B</p> <ul> <li>\\(A\\) : domain of \\(f\\)</li> <li>\\(B\\) : codomain of \\(f\\)</li> <li>\\(b\\) : image of \\(a\\) under \\(f\\)</li> <li>\\(a\\) : preimage of \\(b\\) (can be a set)</li> <li>range : all images of points in \\(A\\) under \\(f\\) , denoted \\(f(A)\\)</li> <li>representing:</li> <li>explicit statement of the assignment</li> <li>a formula</li> <li>a computer program</li> <li>injection / one-to-one : for all preimage is only one element</li> <li>surjection / onto : \\(f(A) = B\\)</li> <li>bijection / one-to-one corresponding : injection and surjection</li> <li>proof of injection / surjection / bijection</li> <li>inverse function : exist when \\(f\\) is a bijection</li> <li>composition : \\(f(g(x))\\)</li> <li>graphs of functions : \u53ef\u89c6\u5316\u5f62\u5f0f (\u4e0e\u56fe\u8bba\u7684\u56fe\u4e0d\u540c)</li> <li>floor / ceiling function</li> <li>factorial function :</li> </ul> <p>Note</p> \\[n! \\sim \\sqrt{2 \\pi n} * (\\frac{n}{e}) ^ n\\] <ul> <li>partial functions</li> <li>\\(a\\) in \\(A\\) but not in domain of definition of \\(f\\), called undefined </li> <li>domain of definition = \\(A\\), called total function</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#sequences-and-summations","title":"Sequences and Summations","text":"<ul> <li>term : the image of \\(N\\)</li> <li>arithmetic </li> <li>string :</li> </ul> <p>Note</p> <p>empty string : \\(\\lambda\\)</p> <ul> <li>recurrence relation</li> <li>fibonacci sequence</li> <li>closed formula : a formula for the nth term of the sequence generated by a recurrence relation.</li> <li>summations : \\(\\sum_{i \\in S} a_i\\)</li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#cardinality-of-sets","title":"Cardinality of Sets","text":"<ul> <li>|\\(A| = |B| \\leftrightarrow \\text{exist bijection between A and B}\\)</li> <li>countable : a set is either finite or has the same cardinality as the set of positive integer \\(Z^+\\). \\(|Z^+| = \\aleph_0\\)</li> <li> <p>properties : </p> <ul> <li>any two set satisify \\((|A| = |B|) \\lor (|A| &gt; |B|) \\lor (|A| &lt; |B|)\\)</li> <li>\\((|A| \\leq |B| \\land |A| \\geq |B|) \\to |A| = |B|\\)</li> </ul> <p>Note</p> <p>pairs of integers is countable (\u87ba\u65cb\u578b\u5c55\u5f00)</p> <ul> <li>no infinite set has a smaller cardinality than a countable set</li> <li>the union of two countable sets is countable</li> <li>the union of finite numbers of countable sets is countable</li> <li>the union of countable number of countable sets is countable</li> <li>uncountable : \\(|R| = \\aleph_1\\)</li> </ul> </li> </ul>"},{"location":"courses-notes/discrete-mathematics/discrete-mathematics-Ch2/#matrices","title":"Matrices","text":"<ul> <li> <p>matrix : a rectangular array of numbers. A matrix with \\(m\\) rows and \\(n\\) columns is called an \\(m \\times n\\) matrix.</p> </li> <li> <p>arithmetic : has mentioned in LA course.</p> </li> <li> <p>zero-one matrices : a matrix all of whose entries are either \\(0\\) or \\(1\\)</p> </li> <li> <p>join : the join of \\(A\\) and \\(B\\) is \\(A \\lor B = \\{c_{ij} = a_{ij} \\lor b_{ij}\\}\\)</p> </li> <li> <p>meet : the meet of \\(A\\) and \\(B\\) is \\(A \\land B = \\{c_{ij} = a_{ij} \\land b_{ij}\\}\\)</p> </li> <li> <p>boolean product : the boolean product of \\(A\\) and \\(B\\) is \\(A \\odot B = \\{ c_{ij} = \\bigvee_{k=1}^K a_{ik} \\land b_{kj}\\}\\)</p> </li> </ul>"},{"location":"courses-notes/general-physics/general-physics-Ch1/","title":"general physics Ch1","text":"<p>title: general-physics date: 2025-02-25 22:59:13 categories:     - \u8bfe\u7a0b\u7b14\u8bb0     - \u666e\u901a\u7269\u7406\u5b66 tags:</p>"},{"location":"courses-notes/general-physics/general-physics/","title":"General physics","text":"<p>title: general-physics date: 2025-02-25 22:59:13 categories:     - \u8bfe\u7a0b\u7b14\u8bb0     - \u666e\u901a\u7269\u7406\u5b66 tags:</p>"},{"location":"courses-notes/linear-algebra/","title":"\u7ebf\u6027\u4ee3\u6570 II\uff08H\uff09","text":"<ul> <li> Ch1 : \u5411\u91cf\u7a7a\u95f4</li> <li> Ch2 : \u6709\u9650\u7ef4\u5411\u91cf\u7a7a\u95f4</li> <li> Ch3 : \u7ebf\u6027\u6620\u5c04</li> </ul>"},{"location":"courses-notes/linear-algebra/Ch3/","title":"\u7ebf\u6027\u6620\u5c04 (\u65bd\u5de5\u4e2d)","text":""},{"location":"courses-notes/linear-algebra/Ch3/#e","title":"E. \u5411\u91cf\u7a7a\u95f4\u7684\u79ef\u4e0e\u5546","text":"<ul> <li> <p>\u5411\u91cf\u7a7a\u95f4\u7684\u79ef :</p> \\[\\boxed{     V_1 \\times ... \\times V_m = \\{ (v_1 , ... , v_m) : v_1 \\in V_1 , ... , v_m \\in V_m\\} }\\] <p>\u6613\u77e5\u5411\u91cf\u7a7a\u95f4\u7684\u79ef\u662f\u5411\u91cf\u7a7a\u95f4\u3002</p> <p>\u540c\u65f6\u6709 :</p> \\[\\boxed{     \\dim (V_1 \\times ... V_m) = \\dim V_1 + ... + \\dim V_m }\\] <p>\u5411\u91cf\u7a7a\u95f4\u7684\u79ef\u4e0e\u76f4\u548c\u540c\u6837\u5b58\u5728\u5173\u7cfb\uff0c\u8bbe \\(U_1, ... , U_m\\) \u5747\u4e3a \\(V\\) \u7684\u5b50\u7a7a\u95f4\u3002\u7ebf\u6027\u6620\u5c04 \\(\\Gamma : U_1 \\times ... \\times U_m \\to U_1 + ... + U_m\\) \u5b9a\u4e49\u4e3a \\(\\Gamma(u_1, ..., u_m) = u_1 + ... + u_m\\) \uff0c\u5219</p> \\[\\boxed{      U_1 + ... + U_m \\text{\u662f\u76f4\u548c} \\leftrightarrow \\Gamma \\text{\u662f\u5355\u5c04} }\\] </li> </ul>"},{"location":"links/","title":"\u53cb\u60c5\u94fe\u63a5","text":""}]}